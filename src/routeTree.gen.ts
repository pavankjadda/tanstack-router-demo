/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HelpImport } from './routes/help'
import { Route as BooksFindImport } from './routes/books/find'
import { Route as BooksAllImport } from './routes/books/all'
import { Route as BooksIdImport } from './routes/books/$id'

// Create Virtual Routes

const ProfileLazyImport = createFileRoute('/profile')()
const LogoutLazyImport = createFileRoute('/logout')()
const LoginLazyImport = createFileRoute('/login')()
const FaqLazyImport = createFileRoute('/faq')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const LogoutLazyRoute = LogoutLazyImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/logout.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const FaqLazyRoute = FaqLazyImport.update({
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/faq.lazy').then((d) => d.Route))

const HelpRoute = HelpImport.update({
  path: '/help',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const BooksFindRoute = BooksFindImport.update({
  path: '/books/find',
  getParentRoute: () => rootRoute,
} as any)

const BooksAllRoute = BooksAllImport.update({
  path: '/books/all',
  getParentRoute: () => rootRoute,
} as any)

const BooksIdRoute = BooksIdImport.update({
  path: '/books/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/help': {
      id: '/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof HelpImport
      parentRoute: typeof rootRoute
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/books/$id': {
      id: '/books/$id'
      path: '/books/$id'
      fullPath: '/books/$id'
      preLoaderRoute: typeof BooksIdImport
      parentRoute: typeof rootRoute
    }
    '/books/all': {
      id: '/books/all'
      path: '/books/all'
      fullPath: '/books/all'
      preLoaderRoute: typeof BooksAllImport
      parentRoute: typeof rootRoute
    }
    '/books/find': {
      id: '/books/find'
      path: '/books/find'
      fullPath: '/books/find'
      preLoaderRoute: typeof BooksFindImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  HelpRoute,
  FaqLazyRoute,
  LoginLazyRoute,
  LogoutLazyRoute,
  ProfileLazyRoute,
  BooksIdRoute,
  BooksAllRoute,
  BooksFindRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/help",
        "/faq",
        "/login",
        "/logout",
        "/profile",
        "/books/$id",
        "/books/all",
        "/books/find"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/help": {
      "filePath": "help.tsx"
    },
    "/faq": {
      "filePath": "faq.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/logout": {
      "filePath": "logout.lazy.tsx"
    },
    "/profile": {
      "filePath": "profile.lazy.tsx"
    },
    "/books/$id": {
      "filePath": "books/$id.tsx"
    },
    "/books/all": {
      "filePath": "books/all.tsx"
    },
    "/books/find": {
      "filePath": "books/find.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
